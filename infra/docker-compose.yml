version: '3.8'

# Project Taylor - Core Services Docker Compose
# This configuration includes only the 3 core working services
# Additional services and infrastructure can be added for production deployment

services:
  # Core Service 1: Job Scraper Service (Port 8001)
  # Handles AI-powered job search, matching, and enrichment
  job-scraper-service:
    build: ../services/job-scraper-service
    ports:
      - "8001:8001"
    environment:
      - PYTHONPATH=/app
    env_file:
      - ../.env
    volumes:
      - ../services/job-scraper-service:/app
    working_dir: /app
    command: python run.py
    networks:
      - taylor-network

  # Core Service 2: AI Copilot Service (Port 8002)
  # Provides career analysis and strategy refinement
  ai-copilot-service:
    build: ../services/ai-copilot-service
    ports:
      - "8002:8002"
    environment:
      - PYTHONPATH=/app
    env_file:
      - ../.env
    volumes:
      - ../services/ai-copilot-service:/app
    working_dir: /app
    command: python run.py
    networks:
      - taylor-network

  # Core Service 3: Resume Generator Service (Port 8003)
  # Generates tailored resumes with multiple themes
  resume-generator-service:
    build: ../services/resume-generator-service
    ports:
      - "8003:8003"
    environment:
      - PYTHONPATH=/app
    env_file:
      - ../.env
    volumes:
      - ../services/resume-generator-service:/app
      - resume-storage:/app/output
    working_dir: /app
    command: python run.py
    networks:
      - taylor-network

  # Frontend: Static file server for the dashboard
  frontend:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ../frontend:/usr/share/nginx/html:ro
    depends_on:
      - job-scraper-service
      - ai-copilot-service
      - resume-generator-service
    networks:
      - taylor-network

# TODO: Add for production deployment
# Uncomment and configure these services when ready for production:

  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - taylor-network

  # filter-service:
  #   build: ../services/filter-service
  #   ports:
  #     - "8004:8004"
  #   env_file:
  #     - ../.env
  #   depends_on:
  #     - redis
  #   networks:
  #     - taylor-network

  # github-jobs-service:
  #   build: ../services/github-jobs-service
  #   ports:
  #     - "8005:8005"
  #   env_file:
  #     - ../.env
  #   depends_on:
  #     - redis
  #   networks:
  #     - taylor-network

  # email-delivery-service:
  #   build: ../services/email-delivery-service
  #   ports:
  #     - "8006:8006"
  #   env_file:
  #     - ../.env
  #   depends_on:
  #     - redis
  #   networks:
  #     - taylor-network

  # Monitoring Stack
  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus:/etc/prometheus
  #     - prometheus-data:/prometheus
  #   networks:
  #     - taylor-network

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   depends_on:
  #     - prometheus
  #   networks:
  #     - taylor-network

volumes:
  resume-storage:
  # redis-data:
  # prometheus-data:
  # grafana-data:

networks:
  taylor-network:
    driver: bridge

# Usage:
# docker-compose up -d                    # Start core services
# docker-compose logs -f [service-name]   # View logs
# docker-compose down                     # Stop all services
